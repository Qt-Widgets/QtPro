from PyQt5.QtWidgets import *
import sys
from PyQt5.QtCore import *
from PyQt5.QtGui import *


class GitButton(QWidget):
    def __init__(self):
        super(GitButton, self).__init__()
        self.setMouseTracking(1)
        self.timer=QTimer()
        self.timer.timeout.connect(self.timercall)
        self.hover=QColor()
        self.color_effect=QRect()
        self.step=0

    def __size(self):
        return self.style().pixelMetric(QStyle.PM_DefaultFrameWidth)\
            ,self.search_button.sizeHint().width()\
            ,self.search_button.sizeHint().height() \
            ,self.clear_button.sizeHint().width() \
            ,self.clear_button.sizeHint().height()

    def enterEvent(self, event):
        self.step=0
        self.timer.start(5)

    def leaveEvent(self, event):
        self.color_effect=QRect(-1,-1,-1,-1)
        self.step=0
        self.timer.stop()
        self.repaint()

    def paintEvent(self, event):
        p=QPainter(self)
        p.setRenderHint(QPainter.Antialiasing)
        p.setBrush(QBrush(QColor(255,255,255)))
        p.drawEllipse(self.rect())
        p.setBrush(QBrush(QColor(216,0,255)))
        p.drawEllipse(self.color_effect)

    def timercall(self):
        w=self.rect().width()/2
        h=self.rect().height()/2
        if self.step>=h-5:
            self.color_effect=QRect(-1,-1,-1,-1)
            self.timer.stop()
        self.step+=1
        self.color_effect.setCoords(w-self.step, h-self.step, w+self.step, h+self.step)
        self.repaint()


def main():
    app=QApplication(sys.argv)
    new=GitButton()
    new.resize(35,35)
    new.show()
    app.exec_()

if __name__ == '__main__':
    main()
